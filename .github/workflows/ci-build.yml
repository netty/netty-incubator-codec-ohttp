# ----------------------------------------------------------------------------
# Copyright 2023 The Netty Project
#
# The Netty Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------
name: Build project

on:
  push:
    branches: [ main ]

  schedule:
    - cron: '30 8 * * 1'  # At 08:30 on Monday, every Monday.

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=240

jobs:
  build-linux-x86_64:
    runs-on: ubuntu-latest
    name: linux-x86_64
    steps:
      - uses: actions/checkout@v4

      # Caching of maven dependencies
      - uses: actions/cache@v4
        continue-on-error: true
        with:
          path: ~/.m2/repository
          key: build-linux-x86_64-maven-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            build-linux-x86_64-maven-cache-

      - name: Build docker image
        run: docker compose -f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml build

      - name: Build project without leak detection
        run: docker compose -f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml run build | tee build.output

      - name: Checking for test failures
        run: ./.github/scripts/check_build_result.sh build.output

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: build-linux-x86_64-jars
          path: |
            **/target/*.jar

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log

  build-linux-aarch64:
    runs-on: ubuntu-latest
    name: linux-aarch64
    steps:
      - uses: actions/checkout@v4

      # Caching of maven dependencies
      - uses: actions/cache@v4
        continue-on-error: true
        with:
          path: ~/.m2/repository
          key: build-linux-aarch64-maven-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            build-linux-aarch64-maven-cache-

      - name: Build docker image
        run: docker compose -f docker/docker-compose.centos-7-cross.yaml build

      - name: Build project without leak detection
        run: docker compose -f docker/docker-compose.centos-7-cross.yaml run cross-compile-aarch64-build

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: build-linux-aarch64-jars
          path: |
            **/target/*.jar

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log
