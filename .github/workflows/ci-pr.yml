# ----------------------------------------------------------------------------
# Copyright 2023 The Netty Project
#
# The Netty Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------
name: Build PR

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=240

jobs:
  build-pr:
    strategy:
      matrix:
        include:
          - setup: linux-x86_64-java8
            docker-compose-build: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml build"
            docker-compose-run: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml run build-leak"
          - setup: linux-x86_64-java8-no-unsafe
            docker-compose-build: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml build"
            docker-compose-run: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.18.yaml run build-no-unsafe"
          - setup: linux-x86_64-java17
            docker-compose-build: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.117.yaml build"
            docker-compose-run: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.117.yaml run build-leak"
          - setup: linux-x86_64-java21
            docker-compose-build: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.21.yaml build"
            docker-compose-run: "-f docker/docker-compose.centos-7.yaml -f docker/docker-compose.centos-7.21.yaml run build-leak"
          - setup: linux-aarch64-java8
            docker-compose-build: "-f docker/docker-compose.centos-7-cross.yaml build"
            docker-compose-run: "-f docker/docker-compose.centos-7-cross.yaml run cross-compile-aarch64-build"

    runs-on: ubuntu-latest
    name: ${{ matrix.setup }} build
    steps:
      - uses: actions/checkout@v4

      # Cache .m2/repository
      - name: Cache local Maven repository
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.setup }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.setup }}-
            ${{ runner.os }}-maven-

      - name: Build docker image
        run: docker-compose ${{ matrix.docker-compose-build }}

      - name: Build project with leak detection
        run: docker-compose ${{ matrix.docker-compose-run }} | tee build-leak.output

      - name: Checking for test failures
        run: ./.github/scripts/check_build_result.sh build-leak.output

      - name: Checking for detected leak
        run: ./.github/scripts/check_leak.sh build-leak.output

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.setup }}
          path: '**/target/surefire-reports/TEST-*.xml'

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: build-${{ matrix.setup }}-target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log
            **/core.*
